[{"id":"1b2081c.0e25d7e","type":"tab","label":"LoRaWAN to Fiware"},{"id":"936a526a.72be28","type":"lora in","z":"1b2081c.0e25d7e","name":"","datatype":"utf8","x":90,"y":200,"wires":[["6383fc98.3f4384","2e4d72fc.69057e"]]},{"id":"734f7f69.e3abe","type":"debug","z":"1b2081c.0e25d7e","name":"","active":false,"console":"false","complete":"true","x":710,"y":540,"wires":[]},{"id":"7fe39077.63207","type":"function","z":"1b2081c.0e25d7e","name":"Construir llamada API UL2.0","func":"var iot_prot = \"http\";\nvar iot_host = \"150.214.58.178\";\nvar iot_port = \"7896\";\nvar api_key = \"7b9m60u98ss0hrklb7z4wauqc\";\n\nvar payload_items = msg.payload.split(\"@\");\nvar device_id = payload_items[0];\nmsg.payload = payload_items[1];\nmsg.method = \"POST\";\nmsg.url = iot_prot+\"://\"+iot_host+\":\"+iot_port+\"/iot/d?k=\"+api_key+\"&i=\"+device_id;\n\nreturn msg;","outputs":1,"noerr":0,"x":320,"y":400,"wires":[["a6c97673.38f3a8","ac5066a7.3fbf38"]]},{"id":"a6c97673.38f3a8","type":"http request","z":"1b2081c.0e25d7e","name":"","method":"use","ret":"txt","url":"","tls":"","x":270,"y":500,"wires":[["734f7f69.e3abe","27723e42.854542","f7ae6dfe.b8745"]]},{"id":"3a994a68.feebc6","type":"debug","z":"1b2081c.0e25d7e","name":"","active":false,"console":"false","complete":"log","x":720,"y":400,"wires":[]},{"id":"ac5066a7.3fbf38","type":"function","z":"1b2081c.0e25d7e","name":"Traza UL2.0","func":"msg.log = \"UL2.0 payload: \"+msg.payload;\nreturn msg;","outputs":1,"noerr":0,"x":550,"y":400,"wires":[["3a994a68.feebc6"]]},{"id":"6383fc98.3f4384","type":"function","z":"1b2081c.0e25d7e","name":"Parsear mensaje recibido","func":"var payload_parts = msg.payload.split(\"@\");\nvar device_id_str = payload_parts[0];\npayload_parts = payload_parts[1].split(\",\");\nvar order_str = payload_parts[0];\npayload_parts = payload_parts[1].split(\":\");\nvar is_last_str = payload_parts[0];\nvar device_payload_str = payload_parts[1];\n\nmsg.device_id = device_id_str;\nmsg.order = Number(order_str);\nmsg.is_last = Boolean(Number(is_last_str));\nmsg.device_payload = device_payload_str;\n\nreturn msg;","outputs":1,"noerr":0,"x":310,"y":200,"wires":[["e055f2e8.5ff6b","684dcda0.e36f94","bc8e1975.639a88","cb653b18.cea9f8","22d1433a.ee168c"]]},{"id":"e055f2e8.5ff6b","type":"debug","z":"1b2081c.0e25d7e","name":"","active":false,"console":"false","complete":"device_id","x":740,"y":140,"wires":[]},{"id":"684dcda0.e36f94","type":"debug","z":"1b2081c.0e25d7e","name":"","active":false,"console":"false","complete":"order","x":720,"y":180,"wires":[]},{"id":"bc8e1975.639a88","type":"debug","z":"1b2081c.0e25d7e","name":"","active":false,"console":"false","complete":"is_last","x":730,"y":220,"wires":[]},{"id":"cb653b18.cea9f8","type":"debug","z":"1b2081c.0e25d7e","name":"","active":false,"console":"false","complete":"device_payload","x":760,"y":260,"wires":[]},{"id":"1a29b1dc.33d71e","type":"debug","z":"1b2081c.0e25d7e","name":"","active":true,"console":"false","complete":"log","x":720,"y":80,"wires":[]},{"id":"cfd9096b.ff41e8","type":"function","z":"1b2081c.0e25d7e","name":"Replicar payload en componentes","func":"msg.device_id = msg.payload;\nmsg.order_str = msg.payload;\nmsg.is_last_str = msg.payload;\nmsg.device_payload = msg.payload;\n\nreturn msg;","outputs":1,"noerr":0,"x":340,"y":700,"wires":[["f5801da8.a6949"]]},{"id":"f5801da8.a6949","type":"change","z":"1b2081c.0e25d7e","name":"Aplicar regexp a componentes","rules":[{"t":"change","p":"device_id","pt":"msg","from":"(\\w+)@(\\d+),(\\d+):([a-zA-Z0-9|.]+).*","fromt":"re","to":"$1","tot":"str"},{"t":"change","p":"order_str","pt":"msg","from":"(\\w+)@(\\d+),(\\d+):([a-zA-Z0-9|.]+).*","fromt":"re","to":"$2","tot":"str"},{"t":"change","p":"is_last_str","pt":"msg","from":"(\\w+)@(\\d+),(\\d+):([a-zA-Z0-9|.]+).*","fromt":"re","to":"$3","tot":"str"},{"t":"change","p":"device_payload","pt":"msg","from":"(\\w+)@(\\d+),(\\d+):([a-zA-Z0-9|.]+).*","fromt":"str","to":"$4","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":330,"y":800,"wires":[["260836e.d642bca","c2e328f.e584ad8","6708813e.62dce","526e6422.38145c"]]},{"id":"260836e.d642bca","type":"debug","z":"1b2081c.0e25d7e","name":"","active":false,"console":"false","complete":"device_id","x":660,"y":740,"wires":[]},{"id":"c2e328f.e584ad8","type":"debug","z":"1b2081c.0e25d7e","name":"","active":false,"console":"false","complete":"order_str","x":660,"y":780,"wires":[]},{"id":"6708813e.62dce","type":"debug","z":"1b2081c.0e25d7e","name":"","active":false,"console":"false","complete":"is_last_str","x":660,"y":820,"wires":[]},{"id":"526e6422.38145c","type":"debug","z":"1b2081c.0e25d7e","name":"","active":false,"console":"false","complete":"device_payload","x":680,"y":860,"wires":[]},{"id":"22d1433a.ee168c","type":"function","z":"1b2081c.0e25d7e","name":"Gestionar los mensajes troceados","func":"// Si es el ultimo mensaje\n// Hay que reconstruir el payload\n// Y mandar el mensaje al siguiente nodo para su envio\nif (msg.is_last) {\n    // Si ademas de ultimo, es el primer mensaje (el orden empieza por 0)\n    // el mensaje no esta partido\n    // No hay que recuperar payloads anteriores\n    if (msg.order === 0)\n        msg.payload = msg.device_id + \"@\" + msg.device_payload;\n    else {\n        // Hay que recuperar los payloads recibidos anteriormente\n        // Concaternar el payload recibido con los anteriores\n        // Y construir el payload final para poder enviar el mensaje\n        msg.payload = msg.device_id + \"@\" + flow.get(msg.device_id) + \"|\" + msg.device_payload;\n        // Se limpian los trozos recibidos anteriormente\n        flow.set(msg.device_id, \"\");\n    }\n    // Se devuelve el mensaje al nodo siguiente para su envio\n    return msg;\n}\nelse {\n    // No es el ultimo mensaje: almacenamos el payload recibido\n    // Se buscan trozos anteriores ya almacenados\n    // La clave de almacenamiento es el id del mensaje\n    // Si no habia nada almacenado antes flow.get devuelve undefined\n    var payload = flow.get(msg.device_id)||\"\";\n    // Si no habia nada almacenado antes (primer trozo recibido de ese dispositivo)\n    // O se habian limpiado los trozos de un mensaje completo anterior\n    if (payload === \"\")\n        // Se almacena el primer trozo del mensaje actual\n        flow.set(msg.device_id, msg.device_payload);\n    else\n        // Se concatena lo recibido al final de los trozos anteriores\n        // Y se almacena\n        flow.set(msg.device_id, payload + \"|\" + msg.device_payload);\n    //Se hace un retorno vacio para parar el flujo\n    return;\n}","outputs":1,"noerr":0,"x":340,"y":300,"wires":[["7fe39077.63207"]]},{"id":"2e4d72fc.69057e","type":"function","z":"1b2081c.0e25d7e","name":"Traza LoRaWAN","func":"msg.log = \"LoRaWAN payload: \" + msg.payload;\nreturn msg;","outputs":1,"noerr":0,"x":290,"y":80,"wires":[["1a29b1dc.33d71e"]]},{"id":"27723e42.854542","type":"debug","z":"1b2081c.0e25d7e","name":"","active":true,"console":"false","complete":"statusCode","x":740,"y":500,"wires":[]},{"id":"f7ae6dfe.b8745","type":"debug","z":"1b2081c.0e25d7e","name":"","active":false,"console":"false","complete":"url","x":720,"y":460,"wires":[]}]